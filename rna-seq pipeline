#!/bin/bash

SECONDS=0

#running fastqc on our fastq files which we have alredy downloaded by fasterq-dump
#changing directory
cd /home/mkalpande/rna_seq_script
path1=/home/mkalpande/TOOLS/hisat2-2.2.1/hisat2_index_files/SRR504382_1.fastq
path2=/home/mkalpande/TOOLS/hisat2-2.2.1/hisat2_index_files/SRR504382_2.fastq
path3=/home/mkalpande/TOOLS/FastQC/SRR11214459.fastq

#STEP 1: RUN FASTQC *(WORKS)
qc_path=/home/mkalpande/rna_seq_script/fastqc_output/SRR504382_2_fastqc.html

fastqc -o fastqc_output  ${path3} #${path1} #${path2}
echo "fastqc run succesfully"

#STEP 2: RUN TRIMMOMATIC (if reads are of bad quality)
java -jar /home/mkalpande/TOOLS/Trimmomatic-0.39/trimmomatic-0.39.jar PE -phred33 ${path2} trimmed.fastq TRAILING:2
PE java -jar /home/mkalpande/TOOLS/Trimmomatic-0.39/trimmomatic-0.39.jar -phred33 trimmed.fastq TRAILING:2
echo "trimmomatic run succesfully"

#STEP 3:RUNNING HISAT2 *(WORKS)
building index of mouse
genome=/home/mkalpande/TOOLS/hisat2-2.2.1/hisat2_index_files/mm39.fa
hisat2-build ${genome} hisat_mouse1
echo "mouse indexes build succesfully"

#run allignment *(WORKS)
hisat_mp1=/home/mkalpande/TOOLS/hisat2-2.2.1/hisat2_index_files/hisat_mouse
path1 and path2 above
hisat2 --dta -p 4 -x ${hisat_mp1} -1 ${path1} -2 ${path2} -S dta_hisat_alignment.sam
#echo "hisat alignment run sucessfully"

#sorting sam file and generate bam file
#giving paths
#index_file=/home/mkalpande/TOOLS/hisat2-2.2.1/hisat2_index_files/hisat_mouse_indexes
cd /home/mkalpande/TOOLS/hisat2-2.2.1/hisat2_index_files
hist_sam=/home/mkalpande/TOOLS/hisat2-2.2.1/hisat2_index_files/dta_hisat_alignment.sam
hist_bam=/home/mkalpande/TOOLS/hisat2-2.2.1/hisat2_index_files/dta_hisat.bam
hist_sort_bam=/home/mkalpande/TOOLS/hisat2-2.2.1/hisat2_index_files/dta_hisat_sort.bam
samtools view -bS ${hist_sam} > dta_hisat.bam
echo "sam file sorted to bam succesfully"

echo "processing...."
samtools sort ${hist_bam} -o dta_hisat_sorted.bam
echo "bam to sorted bam succesfully"

#index bam file
samtools index dta_hisat_sorted.bam
echo "bam file indexed succesfully"


duration=$SECONDS
echo "$(($duration /60)) minutes and $(($duration % 60)) seconds elapsed."


